buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "4.0.0-SNAPSHOT"
group "groupid"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"maven"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided "org.springframework.boot:spring-boot-starter-logging"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.grails:grails-core"
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-dependencies"
	
	compile "org.grails.plugins:hibernate4:5.0.8"
	compile "org.hibernate:hibernate-ehcache"
	compile "org.grails.plugins:cache"
	
	compile "hsqldb:hsqldb:1.8.0.10"
	
	provided 'javax.servlet:javax.servlet-api:3.1.0'
	
	compile('org.liquibase:liquibase-core:2.0.5'){
		//exclude module:'spring'
	}
	compile("org.liquibase.ext:modify-column:2.0.0")
	compile("commons-beanutils:commons-beanutils:1.8.0")
	compile("commons-io:commons-io:1.4")
	compile("commons-lang:commons-lang:2.4")
	compile("org.slf4j:slf4j-ext:1.5.8")
	compile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: '2.0.0'
	
	testCompile "org.grails:grails-plugin-testing"
	testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
	testCompile 'junit:junit:4.12'

}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

uploadArchives {
	repositories.mavenDeployer {
		repository(url: "release-url-artifactory") {
			authentication(userName: USER, password: PASSWORD)
		}
		snapshotRepository(url: "snapshot-url-artifacts") {
			authentication(userName: USER, password: PASSWORD)
		}
	}
}

